{"version":3,"sources":["images/title.png","components/NavBar.js","components/Title.js","components/Result.js","utils/https.js","pages/Books.js","pages/404.js","components/SavedResult.js","pages/SavedBooks.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","NavBar","props","react_default","a","createElement","id","href","target","className","Title","src","alt","height","width","Result","searchSize","results","map","volume","method","action","request","type","value","volumeInfo","title","name","authors","description","buttonOne","previewLink","buttonTwo","imageLinks","thumbnail","postOptions","hostname","path","headers","Content-Type","https","searchBooks","parameters","url","includes","trim","split","join","Promise","resolve","reject","get","response","console","log","statusCode","data","on","chunk","JSON","parse","Error","err","getBooks","saveBook","postData","querystring","stringify","write","end","Books","state","books","search","loadBooks","API","then","catch","saveBooks","handleInputChange","event","_event$target","_this","setState","Object","defineProperty","submitSearch","preventDefault","items","length","src_components_Title","titleImage","this","onChange","disabled","onClick","src_components_Result","Component","NotFound","SavedResult","SavedBooks","fakeBooks","src_components_SavedResult","App","BrowserRouter","src_components_NavBar","Switch","Route","exact","component","Boolean","window","location","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,sYCWzBC,eARA,SAAAC,GAAK,OAClBC,EAAAC,EAAAC,cAAA,OAAKC,GAAG,UACNH,EAAAC,EAAAC,cAAA,QAAMC,GAAG,QAAOH,EAAAC,EAAAC,cAAA,KAAGE,KAAK,2BAA2BC,OAAO,SAA1C,iBAChBL,EAAAC,EAAAC,cAAA,QAAMI,UAAU,QAAON,EAAAC,EAAAC,cAAA,KAAGE,KAAK,KAAR,SACvBJ,EAAAC,EAAAC,cAAA,QAAMI,UAAU,QAAON,EAAAC,EAAAC,cAAA,KAAGE,KAAK,UAAR,mBCAZG,SAJD,SAAAR,GAAK,OACjBC,EAAAC,EAAAC,cAAA,OAAKC,GAAG,QAAQK,IAAKT,EAAMS,IAAKC,IAAI,QAAQC,OAAQX,EAAMW,OAAQC,MAAOZ,EAAMY,UC8BlEC,SA/BA,SAAAb,GAAK,OAClBC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKI,UAAU,mBAAf,qBAAoDP,EAAMc,WAA1D,oBACmB,SAAlBd,EAAMe,QACPf,EAAMe,QAAQC,IAAI,SAAAC,GAAM,OACtBhB,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACbN,EAAAC,EAAAC,cAAA,QAAMC,GAAG,YAAYG,UAAU,UAC7BN,EAAAC,EAAAC,cAAA,QAAMe,OAAO,OAAOC,OAAQnB,EAAMoB,SAChCnB,EAAAC,EAAAC,cAAA,SAAOI,UAAU,OAAOc,KAAK,OAAOC,MAAOL,EAAOM,WAAWC,MAAOC,KAAK,UACzExB,EAAAC,EAAAC,cAAA,SAAOI,UAAU,OAAOc,KAAK,OAAOC,MAAOL,EAAOM,WAAWG,QAASD,KAAK,YAC3ExB,EAAAC,EAAAC,cAAA,SAAOI,UAAU,OAAOc,KAAK,OAAOC,MAAOL,EAAOM,WAAWI,YAAaF,KAAK,gBAC/ExB,EAAAC,EAAAC,cAAA,SAAOkB,KAAK,SAASC,MAAOtB,EAAM4B,cAGtC3B,EAAAC,EAAAC,cAAA,QAAMC,GAAG,YAAYG,UAAU,UAC7BN,EAAAC,EAAAC,cAAA,QAAMgB,OAAQF,EAAOM,WAAWM,aAAe,kBAAmBvB,OAAO,SACvEL,EAAAC,EAAAC,cAAA,SAAOkB,KAAK,SAASC,MAAOtB,EAAM8B,cAGtC7B,EAAAC,EAAAC,cAAA,MAAII,UAAU,QAAQU,EAAOM,WAAWC,OAAS,qBACjDvB,EAAAC,EAAAC,cAAA,MAAII,UAAU,QAAd,WAA8BU,EAAOM,WAAWG,SAAW,sBAC3DzB,EAAAC,EAAAC,cAAA,YACAF,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,OAAKC,GAAG,QAAOH,EAAAC,EAAAC,cAAA,OAAKM,IAAKQ,EAAOM,WAAWQ,WAAWC,UAAWtB,IAAI,UACrET,EAAAC,EAAAC,cAAA,MAAIC,GAAG,cAAcG,UAAU,QAA/B,gBAAoDU,EAAOM,WAAWI,aAAe,+BAGtF1B,EAAAC,EAAAC,cAAA,OAAKI,UAAU,0EC3BlB0B,EAAc,CAClBC,SAAU,gCACVC,KAAM,aACNjB,OAAQ,OACRkB,QAAS,CACDC,eAAgB,sCAI1BC,EAAA,CAEEC,YAAa,SAACC,GAEZ,IAGMC,EAAM,kDAHED,EAAWE,SAAS,KAAOF,EAAWG,OAAOC,MAAM,KAAKC,KAAK,KACzEL,EAAWG,QAGb,OAAO,IAAIG,QAAQ,SAACC,EAASC,GACXV,IAAMW,IAAIR,EAAK,SAACS,GAE9B,GADAC,QAAQC,IAAI,gBAAiBF,EAASG,YACnCH,EAASG,YAAc,KAAOH,EAASG,WAAa,IAAK,CAC1D,IAAIC,EAAO,GACXJ,EAASK,GAAG,OAAQ,SAACC,GAAD,OAAWF,GAAQE,IACvCN,EAASK,GAAG,MAAO,kBAAMR,EAAQU,KAAKC,MAAMJ,WAE5CN,EAAO,IAAIW,MAAMT,EAASG,eAGtBE,GAAG,QAAS,SAACK,GAAD,OAASZ,EAAOY,QAIxCC,SAAU,SAACpB,GACT,OAAO,IAAIK,QAAQ,SAACC,EAASC,GACXV,IAAMW,IAAIR,EAAK,SAACS,GAC9B,GAAGA,EAASG,YAAc,KAAOH,EAASG,WAAa,IAAK,CAC1D,IAAIC,EAAO,GACXJ,EAASK,GAAG,OAAQ,SAACC,GAAD,OAAWF,GAAQE,IACvCN,EAASK,GAAG,MAAO,WACjBR,EAAQU,KAAKC,MAAMJ,WAGrBN,EAAO,IAAIW,MAAMT,EAASG,eAGtBE,GAAG,QAAS,SAACK,GAAD,OAASZ,EAAOY,QAIxCE,SAAU,SAACtC,EAAOE,EAASC,GACzB,IAAMoC,EAAWC,IAAYC,UAAU,CACrCzC,MAASA,GAAS,oBAClBE,QAAWA,GAAW,qBACtBC,YAAeA,GAAe,4BAGhC,OAAO,IAAImB,QAAQ,SAACC,EAASC,GAC3B,IAAM5B,EAAUkB,IAAMlB,QAAQa,EAAa,SAACiB,GAC1C,IAAII,EAAO,GACXJ,EAASK,GAAG,OAAQ,SAACC,GACnBF,GAAQE,IAEVN,EAASK,GAAG,MAAO,WACjBR,EAAQO,OAGZlC,EAAQ8C,MAAMH,GACd3C,EAAQ+C,MACR/C,EAAQmC,GAAG,QAAS,SAACK,GAAD,OAASZ,EAAOY,SCA3BQ,6MA9DbC,MAAQ,CACNC,MAAO,OACPC,OAAQ,GACRzD,WAAY,KAOd0D,UAAY,WACVC,EAAIZ,SAAS,cACVa,KAAK,SAAAxB,GACJC,QAAQC,WAAWF,GACnBC,QAAQC,IAAIF,KAEbyB,MAAM,SAACf,GAAD,OAAST,QAAQC,IAAIQ,QAGhCgB,UAAY,WACVH,EAAIX,WACDY,KAAK,SAAAxB,GAAQ,OAAIC,QAAQC,IAAIF,KAC7ByB,MAAM,SAACf,GAAD,OAAST,QAAQC,IAAIQ,QAGhCiB,kBAAoB,SAAAC,GAAS,IAAAC,EACHD,EAAMxE,OAAtBmB,EADmBsD,EACnBtD,KAAMH,EADayD,EACbzD,MACd0D,EAAKC,SAALC,OAAAC,EAAA,EAAAD,CAAA,GAAiBzD,EAAOH,OAG1B8D,aAAe,SAAAN,GACbA,EAAMO,iBAENlC,QAAQC,IAAI4B,EAAKX,MAAME,QACvBE,EAAIlC,YAAYyC,EAAKX,MAAME,QACxBG,KAAK,SAAAxB,GACJ8B,EAAKC,SAAS,CACZX,MAAOpB,EAASoC,MAChBf,OAAQ,GACRzD,WAAYoC,EAASoC,MAAMC,SAE7BpC,QAAQC,IAAIF,EAASoC,SAEtBX,MAAM,SAACf,GAAD,OAAST,QAAQC,IAAIQ,2HAI9B,OACE3D,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACqF,EAAD,CAAO/E,IAAKgF,MACZxF,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,SAAOC,GAAG,YAAYkB,MAAOoE,KAAKrB,MAAME,OAAQoB,SAAUD,KAAKb,kBAAmBpD,KAAK,WACvFxB,EAAAC,EAAAC,cAAA,UAAQC,GAAG,eAAewF,UAAYF,KAAKrB,MAAME,OAASsB,QAASH,KAAKN,cAAxE,WAEFnF,EAAAC,EAAAC,cAAC2F,EAAD,CAAQH,SAAUD,KAAKb,kBAAmB/D,WAAY4E,KAAKrB,MAAMvD,WACjEC,QAAS2E,KAAKrB,MAAMC,MAAO7C,KAAK,aAChCG,UAAU,qBAAqBE,UAAU,OAAOV,QAAQ,cAzD5C2E,aCSLC,mLARX,OACE/F,EAAAC,EAAAC,cAAA,0CAJiB4F,aC4BRE,SA/BK,SAAAjG,GAAK,OACvBC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKI,UAAU,mBAAf,qBAAoDP,EAAMc,WAA1D,oBACmB,SAAlBd,EAAMe,QACPf,EAAMe,QAAQC,IAAI,SAAAC,GAAM,OACtBhB,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACbN,EAAAC,EAAAC,cAAA,QAAMC,GAAG,YAAYG,UAAU,UAC7BN,EAAAC,EAAAC,cAAA,QAAMe,OAAO,OAAOC,OAAQnB,EAAMoB,SAChCnB,EAAAC,EAAAC,cAAA,SAAOI,UAAU,OAAOc,KAAK,OAAOC,MAAOL,EAAOO,MAAOC,KAAK,UAC9DxB,EAAAC,EAAAC,cAAA,SAAOI,UAAU,OAAOc,KAAK,OAAOC,MAAOL,EAAOS,QAASD,KAAK,YAChExB,EAAAC,EAAAC,cAAA,SAAOI,UAAU,OAAOc,KAAK,OAAOC,MAAOL,EAAOU,YAAaF,KAAK,gBACpExB,EAAAC,EAAAC,cAAA,SAAOkB,KAAK,SAASC,MAAOtB,EAAM4B,cAGtC3B,EAAAC,EAAAC,cAAA,QAAMC,GAAG,YAAYG,UAAU,UAC7BN,EAAAC,EAAAC,cAAA,QAAMgB,OAAQF,EAAOY,aAAe,kBAAmBvB,OAAO,SAC5DL,EAAAC,EAAAC,cAAA,SAAOkB,KAAK,SAASC,MAAOtB,EAAM8B,cAGtC7B,EAAAC,EAAAC,cAAA,MAAII,UAAU,QAAQU,EAAOO,OAAS,qBACtCvB,EAAAC,EAAAC,cAAA,MAAII,UAAU,QAAd,WAA8BU,EAAOS,SAAW,sBAChDzB,EAAAC,EAAAC,cAAA,YACAF,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,OAAKC,GAAG,SACRH,EAAAC,EAAAC,cAAA,MAAIC,GAAG,cAAcG,UAAU,QAA/B,gBAAoDU,EAAOU,aAAe,+BAG3E1B,EAAAC,EAAAC,cAAA,OAAKI,UAAU,uBCYT2F,6MAjCb7B,MAAQ,CACNC,MAAO,OACPxD,WAAY,EACZqF,UAAW,UAOb3B,UAAY,WACVC,EAAIZ,SAAS,cACVa,KAAK,SAAAxB,GAAQ,OAAI8B,EAAKC,SAAS,CAAEX,MAAOpB,MACxCyB,MAAM,SAACf,GAAD,OAAST,QAAQC,IAAIQ,QAGhCiB,kBAAoB,SAAAC,GAAS,IAAAC,EACHD,EAAMxE,OAAtBmB,EADmBsD,EACnBtD,KAAMH,EADayD,EACbzD,MACd0D,EAAKC,SAALC,OAAAC,EAAA,EAAAD,CAAA,GAAiBzD,EAAOH,wFAXxBoE,KAAKlB,6CAeL,OACEvE,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACqF,EAAD,CAAO/E,IAAKgF,MACZxF,EAAAC,EAAAC,cAACiG,EAAD,CAAaT,SAAUD,KAAKb,kBAAmB/D,WAAY4E,KAAKrB,MAAMvD,WACtEC,QAAS2E,KAAKrB,MAAMC,MAAO7C,KAAK,aAChCG,UAAU,cAAcE,UAAU,YAAYV,QAAQ,oBA5BrC2E,aCaVM,EAdH,kBACVpG,EAAAC,EAAAC,cAACmG,EAAA,EAAD,KACErG,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACoG,EAAD,MACAtG,EAAAC,EAAAC,cAACqG,EAAA,EAAD,KACEvG,EAAAC,EAAAC,cAACsG,EAAA,EAAD,CAAOC,OAAK,EAACvE,KAAK,IAAIwE,UAAWvC,IACjCnE,EAAAC,EAAAC,cAACsG,EAAA,EAAD,CAAOC,OAAK,EAACvE,KAAK,UAAUwE,UAAWvC,IACvCnE,EAAAC,EAAAC,cAACsG,EAAA,EAAD,CAAOC,OAAK,EAACvE,KAAK,SAASwE,UAAWT,IACtCjG,EAAAC,EAAAC,cAACsG,EAAA,EAAD,CAAOE,UAAWX,QCHNY,QACW,cAA7BC,OAAOC,SAAS5E,UAEe,UAA7B2E,OAAOC,SAAS5E,UAEhB2E,OAAOC,SAAS5E,SAAS6E,MACvB,2DCZNC,IAASC,OAAOhH,EAAAC,EAAAC,cAAC+G,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM7C,KAAK,SAAA8C,GACjCA,EAAaC","file":"static/js/main.10063fc8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/title.ed1574cc.png\";","import React, { Component } from 'react';\r\nimport './NavBar.css';\r\n\r\nconst NavBar = props => (\r\n  <div id=\"NavBar\">\r\n    <span id=\"span\"><a href=\"https://books.google.com\" target=\"blank\">Google Books</a></span>\r\n    <span className=\"span\"><a href=\"/\">Home</a></span>\r\n    <span className=\"span\"><a href=\"/saved\">Saved Books</a></span>\r\n  </div>\r\n);\r\n\r\nexport default NavBar;\r\n","import React, { Component } from 'react';\r\nimport './Title.css';\r\n\r\nconst Title = props => (\r\n  <img id=\"image\" src={props.src} alt=\"title\" height={props.height} width={props.width} />\r\n);\r\n\r\nexport default Title;\r\n","import React, { Component } from 'react';\r\nimport \"./Result.css\";\r\n\r\nconst Result = props => (\r\n  <div>\r\n    <div className=\"container-title\">Currently Showing {props.searchSize} Search Results:</div>\r\n    {props.results !== \"TEMP\" ?\r\n    props.results.map(volume => (\r\n      <div className=\"container\">\r\n        <span id=\"buttonOne\" className=\"button\">\r\n          <form method=\"post\" action={props.request}>\r\n            <input className=\"none\" type=\"text\" value={volume.volumeInfo.title} name=\"title\" />\r\n            <input className=\"none\" type=\"text\" value={volume.volumeInfo.authors} name=\"authors\" />\r\n            <input className=\"none\" type=\"text\" value={volume.volumeInfo.description} name=\"description\" />\r\n            <input type=\"submit\" value={props.buttonOne} />\r\n          </form>\r\n        </span>\r\n        <span id=\"buttonTwo\" className=\"button\">\r\n          <form action={volume.volumeInfo.previewLink || \"No Preview Link\"} target=\"blank\">\r\n            <input type=\"submit\" value={props.buttonTwo} />\r\n          </form>\r\n        </span>\r\n        <h1 className=\"text\">{volume.volumeInfo.title || \"No Title Provided\"}</h1>\r\n        <h3 className=\"text\">Author: {volume.volumeInfo.authors || \"No Author Provided\"}</h3>\r\n        <div></div>\r\n        <span>\r\n          <div id=\"text\"><img src={volume.volumeInfo.imageLinks.thumbnail} alt=\"Book\" /></div>\r\n          <h3 id=\"description\" className=\"text\">Description: {volume.volumeInfo.description || \"No Description Provided\"}</h3>\r\n        </span>\r\n      </div>\r\n    )) : <div className=\"empty-container\"></div>}\r\n  </div>\r\n);\r\n\r\nexport default Result;\r\n","import https from \"https\";\r\nimport querystring from \"querystring\";\r\n\r\nconst postOptions = {\r\n  hostname: \"wma-googlebooks.herokuapp.com\",\r\n  path: \"/api/books\",\r\n  method: \"POST\",\r\n  headers: {\r\n          'Content-Type': 'application/x-www-form-urlencoded'\r\n  }\r\n}\r\n\r\nexport default {\r\n  //GET REQUEST (Google Search - Books)\r\n  searchBooks: (parameters) => {\r\n\r\n    const query = parameters.includes(\" \") ? parameters.trim().split(\" \").join(\"+\")\r\n    : parameters.trim();\r\n\r\n    const url = 'https://www.googleapis.com/books/v1/volumes?q=' + query;\r\n    return new Promise((resolve, reject) => {\r\n      const request = https.get(url, (response) => {\r\n        console.log(\"RESPONSE CODE\", response.statusCode);\r\n        if(response.statusCode >= 200 && response.statusCode < 300) {\r\n          let data = '';\r\n          response.on('data', (chunk) => data += chunk);\r\n          response.on('end', () => resolve(JSON.parse(data)));\r\n        } else {\r\n          reject(new Error(response.statusCode));\r\n        }\r\n      })\r\n      request.on('error', (err) => reject(err));\r\n    });\r\n  },\r\n  //GET REQUEST (loading ALL books from the database)\r\n  getBooks: (url) => {\r\n    return new Promise((resolve, reject) => {\r\n      const request = https.get(url, (response) => {\r\n        if(response.statusCode >= 200 && response.statusCode < 300) {\r\n          let data = '';\r\n          response.on('data', (chunk) => data += chunk );\r\n          response.on('end', () => {\r\n            resolve(JSON.parse(data));\r\n          });\r\n        } else {\r\n          reject(new Error(response.statusCode));\r\n        }\r\n      });\r\n      request.on('error', (err) => reject(err));\r\n    });\r\n  },\r\n  //POST REQUEST (adding a book to database)\r\n  saveBook: (title, authors, description) => {\r\n    const postData = querystring.stringify({\r\n      \"title\": title || \"No Title Provided\",\r\n      \"authors\": authors || \"No Author Provided\",\r\n      \"description\": description || \"No Description Provided\"\r\n    });\r\n\r\n    return new Promise((resolve, reject) => {\r\n      const request = https.request(postOptions, (response) => {\r\n        let data = '';\r\n        response.on('data', (chunk) => {\r\n          data += chunk;\r\n        });\r\n        response.on('end', () => {\r\n          resolve(data);\r\n        })\r\n      });\r\n      request.write(postData);\r\n      request.end();\r\n      request.on('error', (err) => reject(err));\r\n    });\r\n  }\r\n  //END OF EXPORT\r\n}\r\n","import React, { Component } from 'react';\r\nimport './Books.css';\r\nimport NavBar from '../components/NavBar';\r\nimport Title from '../components/Title';\r\nimport Result from '../components/Result';\r\nimport titleImage from '../images/title.png';\r\nimport API from '../utils/https';\r\n\r\nclass Books extends Component {\r\n  state = {\r\n    books: \"TEMP\",\r\n    search: \"\",\r\n    searchSize: 0\r\n  };\r\n\r\n  componentDidMount() {\r\n    // this.loadBooks();\r\n  }\r\n\r\n  loadBooks = () => {\r\n    API.getBooks('/api/books')\r\n      .then(response => {\r\n        console.log(typeof response);\r\n        console.log(response);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  saveBooks = () => {\r\n    API.saveBook()\r\n      .then(response => console.log(response))\r\n      .catch((err) => console.log(err));\r\n  }\r\n\r\n  handleInputChange = event => {\r\n    const { name, value } = event.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  submitSearch = event => {\r\n    event.preventDefault();\r\n\r\n    console.log(this.state.search);\r\n    API.searchBooks(this.state.search)\r\n      .then(response => {\r\n        this.setState({\r\n          books: response.items,\r\n          search: \"\",\r\n          searchSize: response.items.length\r\n        });\r\n        console.log(response.items);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Title src={titleImage} />\r\n        <form>\r\n          <input id=\"searchbar\" value={this.state.search} onChange={this.handleInputChange} name=\"search\"></input>\r\n          <button id=\"submitButton\" disabled={!(this.state.search)} onClick={this.submitSearch}>Search</button>\r\n        </form>\r\n        <Result onChange={this.handleInputChange} searchSize={this.state.searchSize}\r\n        results={this.state.books} name=\"searchSize\"\r\n        buttonOne=\"Add to Saved Books\" buttonTwo=\"View\" request=\"/\"/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Books;\r\n","import React, { Component } from 'react';\r\nimport './Books.css';\r\nimport NavBar from '../components/NavBar';\r\nimport Title from '../components/Title';\r\nimport Result from '../components/Result';\r\n\r\nclass NotFound extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        Page Not Found (404)\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default NotFound;\r\n","import React, { Component } from 'react';\r\nimport \"./SavedResult.css\";\r\n\r\nconst SavedResult = props => (\r\n  <div>\r\n    <div className=\"container-title\">Currently Showing {props.searchSize} Search Results:</div>\r\n    {props.results !== \"TEMP\" ?\r\n    props.results.map(volume => (\r\n      <div className=\"container\">\r\n        <span id=\"buttonOne\" className=\"button\">\r\n          <form method=\"post\" action={props.request}>\r\n            <input className=\"none\" type=\"text\" value={volume.title} name=\"title\" />\r\n            <input className=\"none\" type=\"text\" value={volume.authors} name=\"authors\" />\r\n            <input className=\"none\" type=\"text\" value={volume.description} name=\"description\" />\r\n            <input type=\"submit\" value={props.buttonOne} />\r\n          </form>\r\n        </span>\r\n        <span id=\"buttonTwo\" className=\"button\">\r\n          <form action={volume.previewLink || \"No Preview Link\"} target=\"blank\">\r\n            <input type=\"submit\" value={props.buttonTwo} />\r\n          </form>\r\n        </span>\r\n        <h1 className=\"text\">{volume.title || \"No Title Provided\"}</h1>\r\n        <h3 className=\"text\">Author: {volume.authors || \"No Author Provided\"}</h3>\r\n        <div></div>\r\n        <span>\r\n          <div id=\"text\"></div>\r\n          <h3 id=\"description\" className=\"text\">Description: {volume.description || \"No Description Provided\"}</h3>\r\n        </span>\r\n      </div>\r\n    )) : <div className=\"empty-container\"></div>}\r\n  </div>\r\n);\r\n\r\nexport default SavedResult;\r\n\r\n// <img src={volume.imageLinks.thumbnail} alt=\"Book\" />\r\n","import React, { Component } from 'react';\r\nimport './Books.css';\r\nimport NavBar from '../components/NavBar';\r\nimport Title from '../components/Title';\r\nimport SavedResult from '../components/SavedResult';\r\nimport titleImage from '../images/title.png';\r\nimport API from '../utils/https';\r\n\r\nclass SavedBooks extends Component {\r\n  state = {\r\n    books: \"TEMP\",\r\n    searchSize: 0,\r\n    fakeBooks: \"TEMP\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.loadBooks();\r\n  }\r\n\r\n  loadBooks = () => {\r\n    API.getBooks('/api/books')\r\n      .then(response => this.setState({ books: response }))\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  handleInputChange = event => {\r\n    const { name, value } = event.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Title src={titleImage} />\r\n        <SavedResult onChange={this.handleInputChange} searchSize={this.state.searchSize}\r\n        results={this.state.books} name=\"searchSize\"\r\n        buttonOne=\"Delete Book\" buttonTwo=\"View Book\" request=\"/delete\"/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SavedBooks;\r\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Books from './pages/Books.js';\nimport NotFound from './pages/404.js';\nimport SavedBooks from './pages/SavedBooks.js';\nimport NavBar from './components/NavBar.js';\n\nconst App = () => (\n  <Router>\n    <div>\n      <NavBar />\n      <Switch>\n        <Route exact path='/' component={Books} />\n        <Route exact path='/search' component={Books} />\n        <Route exact path='/saved' component={SavedBooks} />\n        <Route component={NotFound} />\n      </Switch>\n    </div>\n  </Router>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}